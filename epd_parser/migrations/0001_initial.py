# Generated by Django 5.0.14 on 2025-07-31 13:41

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EpdDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        help_text="Full name of the person responsible for payments",
                        max_length=255,
                        verbose_name="Full Name",
                    ),
                ),
                (
                    "address",
                    models.TextField(
                        help_text="Full address of the property", verbose_name="Address"
                    ),
                ),
                (
                    "account_number",
                    models.CharField(
                        db_index=True,
                        help_text="Unique account number for the property",
                        max_length=50,
                        verbose_name="Account Number",
                    ),
                ),
                (
                    "payment_period",
                    models.CharField(
                        help_text='Payment period (e.g., "01.2024")',
                        max_length=20,
                        verbose_name="Payment Period",
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        help_text="Payment due date", verbose_name="Due Date"
                    ),
                ),
                (
                    "total_without_insurance",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount without insurance",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Total Without Insurance",
                    ),
                ),
                (
                    "total_with_insurance",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount including insurance",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Total With Insurance",
                    ),
                ),
                (
                    "insurance_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Insurance amount",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Insurance Amount",
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(
                        help_text="Uploaded EPD PDF file",
                        upload_to="epd_documents/",
                        verbose_name="PDF File",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "EPD Document",
                "verbose_name_plural": "EPD Documents",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["account_number"], name="epd_parser__account_bc7045_idx"
                    ),
                    models.Index(
                        fields=["payment_period"], name="epd_parser__payment_a175d0_idx"
                    ),
                    models.Index(
                        fields=["due_date"], name="epd_parser__due_dat_fe3463_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ServiceCharge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        help_text="Name of the utility service",
                        max_length=255,
                        verbose_name="Service Name",
                    ),
                ),
                (
                    "volume",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Volume of service consumed",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0000"))
                        ],
                        verbose_name="Volume",
                    ),
                ),
                (
                    "tariff",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Tariff rate per unit",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0000"))
                        ],
                        verbose_name="Tariff",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Calculated amount for this service",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Amount",
                    ),
                ),
                (
                    "debt",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Previous debt amount",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Debt",
                    ),
                ),
                (
                    "paid",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Amount already paid",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Paid",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total amount to pay (amount + debt - paid)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Total",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Order of service in the document",
                        verbose_name="Order",
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_charges",
                        to="epd_parser.epddocument",
                        verbose_name="EPD Document",
                    ),
                ),
            ],
            options={
                "verbose_name": "Service Charge",
                "verbose_name_plural": "Service Charges",
                "ordering": ["document", "order"],
                "indexes": [
                    models.Index(
                        fields=["document", "order"],
                        name="epd_parser__documen_7695c1_idx",
                    ),
                    models.Index(
                        fields=["service_name"], name="epd_parser__service_3f5f2b_idx"
                    ),
                ],
            },
        ),
    ]
