# Generated by Django 5.0.14 on 2025-08-02 09:54

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("epd_parser", "0002_alter_servicecharge_tariff_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="epddocument",
            name="insurance_amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Insurance amount",
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Insurance Amount",
            ),
        ),
        migrations.CreateModel(
            name="MeterReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        help_text="Name of the utility service",
                        max_length=255,
                        verbose_name="Service Name",
                    ),
                ),
                (
                    "meter_type",
                    models.CharField(
                        blank=True,
                        help_text="Type of meter (ИПУ, ОДПУ, etc.)",
                        max_length=50,
                        verbose_name="Meter Type",
                    ),
                ),
                (
                    "meter_number",
                    models.CharField(
                        blank=True,
                        help_text="Meter serial number",
                        max_length=50,
                        verbose_name="Meter Number",
                    ),
                ),
                (
                    "verification_date",
                    models.DateField(
                        blank=True,
                        help_text="Date of meter verification",
                        null=True,
                        verbose_name="Verification Date",
                    ),
                ),
                (
                    "previous_reading",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Previous meter reading",
                        max_digits=15,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0000"))
                        ],
                        verbose_name="Previous Reading",
                    ),
                ),
                (
                    "current_reading",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        help_text="Current meter reading",
                        max_digits=15,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0000"))
                        ],
                        verbose_name="Current Reading",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order", verbose_name="Order"
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="meter_readings",
                        to="epd_parser.epddocument",
                        verbose_name="EPD Document",
                    ),
                ),
            ],
            options={
                "verbose_name": "Meter Reading",
                "verbose_name_plural": "Meter Readings",
                "ordering": ["document", "order"],
                "indexes": [
                    models.Index(
                        fields=["document", "service_name"],
                        name="epd_parser__documen_87f89d_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Recalculation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_name",
                    models.CharField(
                        help_text="Name of the utility service",
                        max_length=255,
                        verbose_name="Service Name",
                    ),
                ),
                (
                    "reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for recalculation",
                        max_length=255,
                        verbose_name="Reason",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Recalculation amount",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Amount",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Display order", verbose_name="Order"
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recalculations",
                        to="epd_parser.epddocument",
                        verbose_name="EPD Document",
                    ),
                ),
            ],
            options={
                "verbose_name": "Recalculation",
                "verbose_name_plural": "Recalculations",
                "ordering": ["document", "order"],
                "indexes": [
                    models.Index(
                        fields=["document", "service_name"],
                        name="epd_parser__documen_64ef3d_idx",
                    )
                ],
            },
        ),
    ]
